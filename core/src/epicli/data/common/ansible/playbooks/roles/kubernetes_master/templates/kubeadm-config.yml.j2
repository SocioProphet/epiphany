apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: v{{ specification.version }}
clusterName: "{{ specification.cluster_name }}"

{% if use_ha_control_plane %}
controlPlaneEndpoint: "localhost:3446"
{% endif %}

etcd:
  local:
    extraArgs:
      # https://github.com/etcd-io/etcd/blob/master/Documentation/tuning.md
      # https://github.com/etcd-io/etcd/blob/master/etcd.conf.yml.sample#L15-L19
      # https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta1#LocalEtcd
      heartbeat-interval: "150"  # default is 100ms
      election-timeout: "5000"   # 5s, default is 1000ms (1s), upper limit it 50000ms (50s)

apiServer:
  timeoutForControlPlane: 4m0s
  extraArgs: # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
{% for key, value in specification.advanced.api_server_args.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}

controllerManager:
  extraArgs: # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
{% for key, value in specification.advanced.controller_manager_args.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}

scheduler:
  extraArgs: # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/
{% for key, value in specification.advanced.scheduler_args.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}

networking:
  dnsDomain: {{ specification.advanced.networking.dnsDomain }}
  podSubnet: "10.244.0.0/16"
  serviceSubnet: {{ specification.advanced.networking.serviceSubnet }}

{% if custom_image_registry_address|length == 0 %}
imageRepository: {{ image_registry_address }}/{{ specification.advanced.imageRepository }}
{% else %}
imageRepository: {{ custom_image_registry_address }}/{{ specification.advanced.imageRepository }}
{% endif %}

certificatesDir: {{ specification.advanced.certificatesDir }}

